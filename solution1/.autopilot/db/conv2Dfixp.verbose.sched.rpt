

================================================================
== Vivado HLS Report for 'conv2Dfixp'
================================================================
* Date:           Tue Sep 26 16:42:47 2017

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        conv2D_fixedp
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      9.63|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2490881|  3670529|  2490882|  3670530|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+--------------+-----------+-----------+------+----------+
        |                     |      Latency      |   Iteration  |  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |    Latency   |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+--------------+-----------+-----------+------+----------+
        |- Loop 1             |  2490880|  3670528| 9730 ~ 14338 |          -|          -|   256|    no    |
        | + Loop 1.1          |     9728|    14336|    38 ~ 56   |          -|          -|   256|    no    |
        |  ++ Loop 1.1.1      |       36|       54|    12 ~ 18   |          -|          -|     3|    no    |
        |   +++ Loop 1.1.1.1  |        9|       15|     3 ~ 5    |          -|          -|     3|    no    |
        +---------------------+---------+---------+--------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond2)
	2  / (exitcond2)
4 --> 
	5  / (!exitcond3)
	3  / (exitcond3)
5 --> 
	6  / true
6 --> 
	7  / (!exitcond)
	4  / (exitcond)
7 --> 
	8  / (or_cond2)
	10  / (!or_cond2)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	6  / true
* FSM state operations: 

 <State 1>: 1.77ns
ST_1: StgValue_11 (4)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([65536 x i16]* %in_V), !map !33

ST_1: StgValue_12 (5)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([65536 x i16]* %out_V), !map !39

ST_1: StgValue_13 (6)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([9 x i16]* %kernel_V), !map !43

ST_1: StgValue_14 (7)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @conv2Dfixp_str) nounwind

ST_1: StgValue_15 (8)  [1/1] 1.77ns  loc: conv2D_fixedp/conv.cpp:8
:4  br label %.loopexit


 <State 2>: 3.02ns
ST_2: i (10)  [1/1] 0.00ns
.loopexit:0  %i = phi i9 [ 0, %0 ], [ %i_1, %.loopexit.loopexit ]

ST_2: i_cast (11)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:8
.loopexit:1  %i_cast = zext i9 %i to i10

ST_2: exitcond1 (12)  [1/1] 3.02ns  loc: conv2D_fixedp/conv.cpp:8
.loopexit:2  %exitcond1 = icmp eq i9 %i, -256

ST_2: empty (13)  [1/1] 0.00ns
.loopexit:3  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_2: i_1 (14)  [1/1] 2.82ns  loc: conv2D_fixedp/conv.cpp:8
.loopexit:4  %i_1 = add i9 %i, 1

ST_2: StgValue_21 (15)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:8
.loopexit:5  br i1 %exitcond1, label %3, label %.preheader27.preheader

ST_2: tmp (17)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:8
.preheader27.preheader:0  %tmp = trunc i9 %i to i8

ST_2: tmp_1 (18)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader27.preheader:1  %tmp_1 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %tmp, i8 0)

ST_2: StgValue_24 (19)  [1/1] 1.77ns  loc: conv2D_fixedp/conv.cpp:10
.preheader27.preheader:2  br label %.preheader27

ST_2: StgValue_25 (102)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:32
:0  ret void


 <State 3>: 3.02ns
ST_3: j (21)  [1/1] 0.00ns
.preheader27:0  %j = phi i9 [ 0, %.preheader27.preheader ], [ %j_1, %.preheader27.loopexit ]

ST_3: j_cast8 (22)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:10
.preheader27:1  %j_cast8 = zext i9 %j to i16

ST_3: j_cast (23)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:10
.preheader27:2  %j_cast = zext i9 %j to i10

ST_3: exitcond2 (24)  [1/1] 3.02ns  loc: conv2D_fixedp/conv.cpp:10
.preheader27:3  %exitcond2 = icmp eq i9 %j, -256

ST_3: empty_6 (25)  [1/1] 0.00ns
.preheader27:4  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_3: j_1 (26)  [1/1] 2.82ns  loc: conv2D_fixedp/conv.cpp:10
.preheader27:5  %j_1 = add i9 %j, 1

ST_3: StgValue_32 (27)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:10
.preheader27:6  br i1 %exitcond2, label %.loopexit.loopexit, label %.preheader26.preheader

ST_3: tmp_4 (29)  [1/1] 2.96ns  loc: conv2D_fixedp/conv.cpp:26
.preheader26.preheader:0  %tmp_4 = add i16 %tmp_1, %j_cast8

ST_3: tmp_5 (30)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader26.preheader:1  %tmp_5 = zext i16 %tmp_4 to i64

ST_3: out_V_addr (31)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader26.preheader:2  %out_V_addr = getelementptr [65536 x i16]* %out_V, i64 0, i64 %tmp_5

ST_3: StgValue_36 (32)  [1/1] 1.77ns  loc: conv2D_fixedp/conv.cpp:12
.preheader26.preheader:3  br label %.preheader26

ST_3: StgValue_37 (100)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit


 <State 4>: 2.45ns
ST_4: m (34)  [1/1] 0.00ns
.preheader26:0  %m = phi i2 [ 0, %.preheader26.preheader ], [ %m_1, %.preheader26.loopexit ]

ST_4: exitcond3 (35)  [1/1] 2.07ns  loc: conv2D_fixedp/conv.cpp:12
.preheader26:1  %exitcond3 = icmp eq i2 %m, -1

ST_4: empty_7 (36)  [1/1] 0.00ns
.preheader26:2  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_4: m_1 (37)  [1/1] 2.45ns  loc: conv2D_fixedp/conv.cpp:12
.preheader26:3  %m_1 = add i2 %m, 1

ST_4: StgValue_42 (38)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:12
.preheader26:4  br i1 %exitcond3, label %.preheader27.loopexit, label %.preheader.preheader

ST_4: tmp1 (40)  [1/1] 2.45ns  loc: conv2D_fixedp/conv.cpp:21
.preheader.preheader:0  %tmp1 = add i2 %m, -1

ST_4: StgValue_44 (98)  [1/1] 0.00ns
.preheader27.loopexit:0  br label %.preheader27


 <State 5>: 6.96ns
ST_5: tmp1_cast (41)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:21
.preheader.preheader:1  %tmp1_cast = sext i2 %tmp1 to i10

ST_5: ii (42)  [1/1] 2.82ns  loc: conv2D_fixedp/conv.cpp:21
.preheader.preheader:2  %ii = add i10 %i_cast, %tmp1_cast

ST_5: tmp_3 (43)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25 (grouped into LUT with out node tmp3)
.preheader.preheader:3  %tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %ii, i32 9)

ST_5: rev (44)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25 (grouped into LUT with out node tmp3)
.preheader.preheader:4  %rev = xor i1 %tmp_3, true

ST_5: tmp_7 (45)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25
.preheader.preheader:5  %tmp_7 = call i2 @_ssdm_op_PartSelect.i2.i10.i32.i32(i10 %ii, i32 8, i32 9)

ST_5: icmp (46)  [1/1] 2.07ns  loc: conv2D_fixedp/conv.cpp:25
.preheader.preheader:6  %icmp = icmp ne i2 %tmp_7, 1

ST_5: tmp_6 (47)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader.preheader:7  %tmp_6 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %ii, i8 0)

ST_5: tmp_8_cast6 (48)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader.preheader:8  %tmp_8_cast6 = zext i2 %m to i5

ST_5: p_shl (49)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader.preheader:9  %p_shl = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %m, i2 0)

ST_5: p_shl_cast (50)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
.preheader.preheader:10  %p_shl_cast = zext i4 %p_shl to i5

ST_5: tmp_2 (51)  [1/1] 2.62ns  loc: conv2D_fixedp/conv.cpp:26
.preheader.preheader:11  %tmp_2 = sub i5 %p_shl_cast, %tmp_8_cast6

ST_5: tmp3 (52)  [1/1] 2.07ns  loc: conv2D_fixedp/conv.cpp:25 (out node of the LUT)
.preheader.preheader:12  %tmp3 = and i1 %icmp, %rev

ST_5: StgValue_57 (53)  [1/1] 1.77ns  loc: conv2D_fixedp/conv.cpp:16
.preheader.preheader:13  br label %.preheader


 <State 6>: 2.45ns
ST_6: n (55)  [1/1] 0.00ns
.preheader:0  %n = phi i2 [ %n_1, %._crit_edge ], [ 0, %.preheader.preheader ]

ST_6: exitcond (56)  [1/1] 2.07ns  loc: conv2D_fixedp/conv.cpp:16
.preheader:1  %exitcond = icmp eq i2 %n, -1

ST_6: empty_8 (57)  [1/1] 0.00ns
.preheader:2  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)

ST_6: n_1 (58)  [1/1] 2.45ns  loc: conv2D_fixedp/conv.cpp:16
.preheader:3  %n_1 = add i2 %n, 1

ST_6: StgValue_62 (59)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:16
.preheader:4  br i1 %exitcond, label %.preheader26.loopexit, label %1

ST_6: tmp2 (61)  [1/1] 2.45ns  loc: conv2D_fixedp/conv.cpp:22
:0  %tmp2 = add i2 %n, -1

ST_6: StgValue_64 (96)  [1/1] 0.00ns
.preheader26.loopexit:0  br label %.preheader26


 <State 7>: 6.96ns
ST_7: tmp2_cast (62)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:22
:1  %tmp2_cast = sext i2 %tmp2 to i10

ST_7: jj (63)  [1/1] 2.82ns  loc: conv2D_fixedp/conv.cpp:22
:2  %jj = add i10 %tmp2_cast, %j_cast

ST_7: jj_cast (64)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:22
:3  %jj_cast = sext i10 %jj to i16

ST_7: tmp_9 (65)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25 (grouped into LUT with out node or_cond2)
:4  %tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i10.i32(i10 %jj, i32 9)

ST_7: rev4 (66)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25 (grouped into LUT with out node or_cond2)
:5  %rev4 = xor i1 %tmp_9, true

ST_7: tmp_15 (67)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25
:6  %tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i10.i32.i32(i10 %jj, i32 8, i32 9)

ST_7: icmp7 (68)  [1/1] 2.07ns  loc: conv2D_fixedp/conv.cpp:25
:7  %icmp7 = icmp ne i2 %tmp_15, 1

ST_7: tmp4 (69)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25 (grouped into LUT with out node or_cond2)
:8  %tmp4 = and i1 %icmp7, %rev4

ST_7: or_cond2 (70)  [1/1] 2.07ns  loc: conv2D_fixedp/conv.cpp:25 (out node of the LUT)
:9  %or_cond2 = and i1 %tmp4, %tmp3

ST_7: StgValue_74 (71)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:25
:10  br i1 %or_cond2, label %2, label %._crit_edge

ST_7: tmp_14_cast (73)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:0  %tmp_14_cast = zext i16 %jj_cast to i18

ST_7: tmp_8 (74)  [1/1] 3.02ns  loc: conv2D_fixedp/conv.cpp:26
:1  %tmp_8 = add i18 %tmp_14_cast, %tmp_6

ST_7: tmp_17_cast (76)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:3  %tmp_17_cast = zext i2 %n to i5

ST_7: tmp_10 (77)  [1/1] 2.66ns  loc: conv2D_fixedp/conv.cpp:26
:4  %tmp_10 = add i5 %tmp_17_cast, %tmp_2


 <State 8>: 3.25ns
ST_8: tmp_s (75)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:2  %tmp_s = zext i18 %tmp_8 to i64

ST_8: tmp_18_cast (78)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:5  %tmp_18_cast = sext i5 %tmp_10 to i32

ST_8: tmp_11 (79)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:6  %tmp_11 = zext i32 %tmp_18_cast to i64

ST_8: in_V_addr (80)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:7  %in_V_addr = getelementptr [65536 x i16]* %in_V, i64 0, i64 %tmp_s

ST_8: in_V_load (81)  [2/2] 3.25ns  loc: conv2D_fixedp/conv.cpp:26
:8  %in_V_load = load i16* %in_V_addr, align 2

ST_8: kernel_V_addr (83)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:10  %kernel_V_addr = getelementptr [9 x i16]* %kernel_V, i64 0, i64 %tmp_11

ST_8: kernel_V_load (84)  [2/2] 2.32ns  loc: conv2D_fixedp/conv.cpp:26
:11  %kernel_V_load = load i16* %kernel_V_addr, align 2

ST_8: p_Val2_s (87)  [2/2] 3.25ns  loc: conv2D_fixedp/conv.cpp:26
:14  %p_Val2_s = load i16* %out_V_addr, align 2


 <State 9>: 3.25ns
ST_9: in_V_load (81)  [1/2] 3.25ns  loc: conv2D_fixedp/conv.cpp:26
:8  %in_V_load = load i16* %in_V_addr, align 2

ST_9: kernel_V_load (84)  [1/2] 2.32ns  loc: conv2D_fixedp/conv.cpp:26
:11  %kernel_V_load = load i16* %kernel_V_addr, align 2

ST_9: p_Val2_s (87)  [1/2] 3.25ns  loc: conv2D_fixedp/conv.cpp:26
:14  %p_Val2_s = load i16* %out_V_addr, align 2


 <State 10>: 9.63ns
ST_10: OP1_V (82)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:9  %OP1_V = sext i16 %in_V_load to i20

ST_10: OP2_V (85)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:12  %OP2_V = sext i16 %kernel_V_load to i20

ST_10: p_Val2_1 (86)  [1/1] 3.36ns  loc: conv2D_fixedp/conv.cpp:26
:13  %p_Val2_1 = mul i20 %OP2_V, %OP1_V

ST_10: tmp_12 (88)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:15  %tmp_12 = call i20 @_ssdm_op_BitConcatenate.i20.i16.i4(i16 %p_Val2_s, i4 0)

ST_10: p_Val2_2 (89)  [1/1] 3.02ns  loc: conv2D_fixedp/conv.cpp:26
:16  %p_Val2_2 = add i20 %p_Val2_1, %tmp_12

ST_10: tmp_13 (90)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:17  %tmp_13 = call i16 @_ssdm_op_PartSelect.i16.i20.i32.i32(i20 %p_Val2_2, i32 4, i32 19)

ST_10: StgValue_96 (91)  [1/1] 3.25ns  loc: conv2D_fixedp/conv.cpp:26
:18  store i16 %tmp_13, i16* %out_V_addr, align 2

ST_10: StgValue_97 (92)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:26
:19  br label %._crit_edge

ST_10: StgValue_98 (94)  [1/1] 0.00ns  loc: conv2D_fixedp/conv.cpp:16
._crit_edge:0  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', conv2D_fixedp/conv.cpp:8) [10]  (1.77 ns)

 <State 2>: 3.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', conv2D_fixedp/conv.cpp:8) [10]  (0 ns)
	'icmp' operation ('exitcond1', conv2D_fixedp/conv.cpp:8) [12]  (3.02 ns)

 <State 3>: 3.02ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', conv2D_fixedp/conv.cpp:10) [21]  (0 ns)
	'icmp' operation ('exitcond2', conv2D_fixedp/conv.cpp:10) [24]  (3.02 ns)

 <State 4>: 2.45ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', conv2D_fixedp/conv.cpp:12) [34]  (0 ns)
	'add' operation ('m', conv2D_fixedp/conv.cpp:12) [37]  (2.45 ns)

 <State 5>: 6.96ns
The critical path consists of the following:
	'add' operation ('ii', conv2D_fixedp/conv.cpp:21) [42]  (2.82 ns)
	'icmp' operation ('icmp', conv2D_fixedp/conv.cpp:25) [46]  (2.07 ns)
	'and' operation ('tmp3', conv2D_fixedp/conv.cpp:25) [52]  (2.07 ns)

 <State 6>: 2.45ns
The critical path consists of the following:
	'phi' operation ('n') with incoming values : ('n', conv2D_fixedp/conv.cpp:16) [55]  (0 ns)
	'add' operation ('n', conv2D_fixedp/conv.cpp:16) [58]  (2.45 ns)

 <State 7>: 6.96ns
The critical path consists of the following:
	'add' operation ('jj', conv2D_fixedp/conv.cpp:22) [63]  (2.82 ns)
	'icmp' operation ('icmp7', conv2D_fixedp/conv.cpp:25) [68]  (2.07 ns)
	'and' operation ('tmp4', conv2D_fixedp/conv.cpp:25) [69]  (0 ns)
	'and' operation ('or_cond2', conv2D_fixedp/conv.cpp:25) [70]  (2.07 ns)

 <State 8>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('in_V_addr', conv2D_fixedp/conv.cpp:26) [80]  (0 ns)
	'load' operation ('in_V_load', conv2D_fixedp/conv.cpp:26) on array 'in_V' [81]  (3.25 ns)

 <State 9>: 3.25ns
The critical path consists of the following:
	'load' operation ('in_V_load', conv2D_fixedp/conv.cpp:26) on array 'in_V' [81]  (3.25 ns)

 <State 10>: 9.63ns
The critical path consists of the following:
	'mul' operation ('p_Val2_1', conv2D_fixedp/conv.cpp:26) [86]  (3.36 ns)
	'add' operation ('__Val2__', conv2D_fixedp/conv.cpp:26) [89]  (3.02 ns)
	'store' operation (conv2D_fixedp/conv.cpp:26) of variable 'tmp_13', conv2D_fixedp/conv.cpp:26 on array 'out_V' [91]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

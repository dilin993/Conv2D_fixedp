// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2Dfixp_HH_
#define _conv2Dfixp_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv2Dfixp_mac_mubkb.h"

namespace ap_rtl {

struct conv2Dfixp : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > in_V_address0;
    sc_out< sc_logic > in_V_ce0;
    sc_in< sc_lv<16> > in_V_q0;
    sc_out< sc_lv<16> > out_V_address0;
    sc_out< sc_logic > out_V_ce0;
    sc_out< sc_logic > out_V_we0;
    sc_out< sc_lv<16> > out_V_d0;
    sc_in< sc_lv<16> > out_V_q0;
    sc_out< sc_lv<4> > kernel_V_address0;
    sc_out< sc_logic > kernel_V_ce0;
    sc_in< sc_lv<16> > kernel_V_q0;


    // Module declarations
    conv2Dfixp(sc_module_name name);
    SC_HAS_PROCESS(conv2Dfixp);

    ~conv2Dfixp();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2Dfixp_mac_mubkb<1,1,16,16,20,20>* conv2Dfixp_mac_mubkb_U1;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > i_cast_fu_141_p1;
    sc_signal< sc_lv<10> > i_cast_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > i_1_fu_151_p2;
    sc_signal< sc_lv<9> > i_1_reg_432;
    sc_signal< sc_lv<16> > tmp_1_fu_161_p3;
    sc_signal< sc_lv<16> > tmp_1_reg_437;
    sc_signal< sc_lv<1> > exitcond1_fu_145_p2;
    sc_signal< sc_lv<10> > j_cast_fu_173_p1;
    sc_signal< sc_lv<10> > j_cast_reg_442;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > j_1_fu_183_p2;
    sc_signal< sc_lv<9> > j_1_reg_450;
    sc_signal< sc_lv<16> > out_V_addr_reg_455;
    sc_signal< sc_lv<1> > exitcond2_fu_177_p2;
    sc_signal< sc_lv<2> > m_1_fu_205_p2;
    sc_signal< sc_lv<2> > m_1_reg_463;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > tmp1_fu_211_p2;
    sc_signal< sc_lv<2> > tmp1_reg_468;
    sc_signal< sc_lv<1> > exitcond3_fu_199_p2;
    sc_signal< sc_lv<18> > tmp_6_fu_255_p3;
    sc_signal< sc_lv<18> > tmp_6_reg_473;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > tmp_2_fu_279_p2;
    sc_signal< sc_lv<5> > tmp_2_reg_478;
    sc_signal< sc_lv<1> > tmp3_fu_285_p2;
    sc_signal< sc_lv<1> > tmp3_reg_483;
    sc_signal< sc_lv<2> > n_1_fu_297_p2;
    sc_signal< sc_lv<2> > n_1_reg_491;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > tmp2_fu_303_p2;
    sc_signal< sc_lv<2> > tmp2_reg_496;
    sc_signal< sc_lv<1> > exitcond_fu_291_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_357_p2;
    sc_signal< sc_lv<1> > or_cond2_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<18> > tmp_8_fu_366_p2;
    sc_signal< sc_lv<18> > tmp_8_reg_505;
    sc_signal< sc_lv<5> > tmp_10_fu_375_p2;
    sc_signal< sc_lv<5> > tmp_10_reg_510;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > in_V_load_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > kernel_V_load_reg_530;
    sc_signal< sc_lv<16> > p_Val2_s_reg_535;
    sc_signal< sc_lv<9> > i_reg_95;
    sc_signal< sc_lv<9> > j_reg_106;
    sc_signal< sc_lv<2> > m_reg_117;
    sc_signal< sc_lv<2> > n_reg_129;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > tmp_5_fu_194_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_380_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_387_p1;
    sc_signal< sc_lv<8> > tmp_fu_157_p1;
    sc_signal< sc_lv<16> > j_cast8_fu_169_p1;
    sc_signal< sc_lv<16> > tmp_4_fu_189_p2;
    sc_signal< sc_lv<10> > tmp1_cast_fu_217_p1;
    sc_signal< sc_lv<10> > ii_fu_220_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_225_p3;
    sc_signal< sc_lv<2> > tmp_7_fu_239_p4;
    sc_signal< sc_lv<4> > p_shl_fu_267_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_275_p1;
    sc_signal< sc_lv<5> > tmp_8_cast6_fu_263_p1;
    sc_signal< sc_lv<1> > icmp_fu_249_p2;
    sc_signal< sc_lv<1> > rev_fu_233_p2;
    sc_signal< sc_lv<10> > tmp2_cast_fu_309_p1;
    sc_signal< sc_lv<10> > jj_fu_312_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_321_p3;
    sc_signal< sc_lv<2> > tmp_15_fu_335_p4;
    sc_signal< sc_lv<1> > icmp7_fu_345_p2;
    sc_signal< sc_lv<1> > rev4_fu_329_p2;
    sc_signal< sc_lv<1> > tmp4_fu_351_p2;
    sc_signal< sc_lv<16> > jj_cast_fu_317_p1;
    sc_signal< sc_lv<18> > tmp_14_cast_fu_362_p1;
    sc_signal< sc_lv<5> > tmp_17_cast_fu_371_p1;
    sc_signal< sc_lv<32> > tmp_18_cast_fu_384_p1;
    sc_signal< sc_lv<20> > grp_fu_415_p3;
    sc_signal< sc_lv<20> > grp_fu_415_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_145_p2();
    void thread_exitcond2_fu_177_p2();
    void thread_exitcond3_fu_199_p2();
    void thread_exitcond_fu_291_p2();
    void thread_grp_fu_415_p2();
    void thread_i_1_fu_151_p2();
    void thread_i_cast_fu_141_p1();
    void thread_icmp7_fu_345_p2();
    void thread_icmp_fu_249_p2();
    void thread_ii_fu_220_p2();
    void thread_in_V_address0();
    void thread_in_V_ce0();
    void thread_j_1_fu_183_p2();
    void thread_j_cast8_fu_169_p1();
    void thread_j_cast_fu_173_p1();
    void thread_jj_cast_fu_317_p1();
    void thread_jj_fu_312_p2();
    void thread_kernel_V_address0();
    void thread_kernel_V_ce0();
    void thread_m_1_fu_205_p2();
    void thread_n_1_fu_297_p2();
    void thread_or_cond2_fu_357_p2();
    void thread_out_V_address0();
    void thread_out_V_ce0();
    void thread_out_V_d0();
    void thread_out_V_we0();
    void thread_p_shl_cast_fu_275_p1();
    void thread_p_shl_fu_267_p3();
    void thread_rev4_fu_329_p2();
    void thread_rev_fu_233_p2();
    void thread_tmp1_cast_fu_217_p1();
    void thread_tmp1_fu_211_p2();
    void thread_tmp2_cast_fu_309_p1();
    void thread_tmp2_fu_303_p2();
    void thread_tmp3_fu_285_p2();
    void thread_tmp4_fu_351_p2();
    void thread_tmp_10_fu_375_p2();
    void thread_tmp_11_fu_387_p1();
    void thread_tmp_14_cast_fu_362_p1();
    void thread_tmp_15_fu_335_p4();
    void thread_tmp_17_cast_fu_371_p1();
    void thread_tmp_18_cast_fu_384_p1();
    void thread_tmp_1_fu_161_p3();
    void thread_tmp_2_fu_279_p2();
    void thread_tmp_3_fu_225_p3();
    void thread_tmp_4_fu_189_p2();
    void thread_tmp_5_fu_194_p1();
    void thread_tmp_6_fu_255_p3();
    void thread_tmp_7_fu_239_p4();
    void thread_tmp_8_cast6_fu_263_p1();
    void thread_tmp_8_fu_366_p2();
    void thread_tmp_9_fu_321_p3();
    void thread_tmp_fu_157_p1();
    void thread_tmp_s_fu_380_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

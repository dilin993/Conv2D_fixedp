// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv2Dfixp.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv2Dfixp::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv2Dfixp::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state1 = "1";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state2 = "10";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state3 = "100";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state4 = "1000";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state5 = "10000";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state6 = "100000";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> conv2Dfixp::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> conv2Dfixp::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv2Dfixp::ap_const_lv32_1 = "1";
const sc_lv<1> conv2Dfixp::ap_const_lv1_0 = "0";
const sc_lv<32> conv2Dfixp::ap_const_lv32_2 = "10";
const sc_lv<32> conv2Dfixp::ap_const_lv32_3 = "11";
const sc_lv<32> conv2Dfixp::ap_const_lv32_4 = "100";
const sc_lv<32> conv2Dfixp::ap_const_lv32_5 = "101";
const sc_lv<32> conv2Dfixp::ap_const_lv32_6 = "110";
const sc_lv<1> conv2Dfixp::ap_const_lv1_1 = "1";
const sc_lv<32> conv2Dfixp::ap_const_lv32_7 = "111";
const sc_lv<5> conv2Dfixp::ap_const_lv5_0 = "00000";
const sc_lv<2> conv2Dfixp::ap_const_lv2_0 = "00";
const sc_lv<32> conv2Dfixp::ap_const_lv32_8 = "1000";
const sc_lv<5> conv2Dfixp::ap_const_lv5_1C = "11100";
const sc_lv<5> conv2Dfixp::ap_const_lv5_1 = "1";
const sc_lv<2> conv2Dfixp::ap_const_lv2_3 = "11";
const sc_lv<2> conv2Dfixp::ap_const_lv2_1 = "1";
const sc_lv<2> conv2Dfixp::ap_const_lv2_2 = "10";
const sc_lv<6> conv2Dfixp::ap_const_lv6_1C = "11100";
const sc_lv<12> conv2Dfixp::ap_const_lv12_0 = "000000000000";
const sc_lv<32> conv2Dfixp::ap_const_lv32_C = "1100";
const sc_lv<32> conv2Dfixp::ap_const_lv32_1B = "11011";
const bool conv2Dfixp::ap_const_boolean_1 = true;

conv2Dfixp::conv2Dfixp(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv2Dfixp_mac_mubkb_U1 = new conv2Dfixp_mac_mubkb<1,1,16,16,28,28>("conv2Dfixp_mac_mubkb_U1");
    conv2Dfixp_mac_mubkb_U1->din0(in_V_load_reg_545);
    conv2Dfixp_mac_mubkb_U1->din1(kernel_V_load_reg_550);
    conv2Dfixp_mac_mubkb_U1->din2(grp_fu_445_p2);
    conv2Dfixp_mac_mubkb_U1->dout(grp_fu_445_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_145_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_145_p2 );

    SC_METHOD(thread_exitcond1_fu_145_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_exitcond2_fu_191_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_106 );

    SC_METHOD(thread_exitcond3_fu_221_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( m_reg_117 );

    SC_METHOD(thread_exitcond_fu_323_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( n_reg_129 );

    SC_METHOD(thread_grp_fu_445_p2);
    sensitive << ( or_cond2_reg_531 );
    sensitive << ( p_Val2_s_reg_555 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_i_1_fu_151_p2);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_i_cast_fu_141_p1);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_ii_fu_248_p2);
    sensitive << ( i_cast_reg_454 );
    sensitive << ( tmp1_cast_fu_245_p1 );

    SC_METHOD(thread_in_V_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_s_fu_399_p1 );

    SC_METHOD(thread_in_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_j_1_fu_197_p2);
    sensitive << ( j_reg_106 );

    SC_METHOD(thread_j_cast_fu_187_p1);
    sensitive << ( j_reg_106 );

    SC_METHOD(thread_jj_fu_350_p2);
    sensitive << ( j_cast_reg_472 );
    sensitive << ( tmp2_cast_fu_347_p1 );

    SC_METHOD(thread_kernel_V_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_11_fu_417_p1 );

    SC_METHOD(thread_kernel_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_m_1_fu_227_p2);
    sensitive << ( m_reg_117 );

    SC_METHOD(thread_mm_fu_239_p2);
    sensitive << ( m_reg_117 );

    SC_METHOD(thread_n_1_fu_329_p2);
    sensitive << ( n_reg_129 );

    SC_METHOD(thread_nn_fu_341_p2);
    sensitive << ( n_reg_129 );

    SC_METHOD(thread_or_cond2_fu_381_p2);
    sensitive << ( tmp3_reg_513 );
    sensitive << ( tmp4_fu_375_p2 );

    SC_METHOD(thread_out_V_address0);
    sensitive << ( out_V_addr_reg_485 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_out_V_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_fu_445_p3 );

    SC_METHOD(thread_out_V_we0);
    sensitive << ( or_cond2_reg_531 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_p_shl1_fu_277_p3);
    sensitive << ( ii_fu_248_p2 );

    SC_METHOD(thread_p_shl2_cast_fu_307_p1);
    sensitive << ( p_shl2_fu_299_p3 );

    SC_METHOD(thread_p_shl2_fu_299_p3);
    sensitive << ( mm_fu_239_p2 );

    SC_METHOD(thread_p_shl9_cast_fu_177_p1);
    sensitive << ( p_shl9_fu_169_p3 );

    SC_METHOD(thread_p_shl9_fu_169_p3);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_p_shl_cast_fu_165_p1);
    sensitive << ( p_shl_fu_157_p3 );

    SC_METHOD(thread_p_shl_fu_157_p3);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_rev4_fu_363_p2);
    sensitive << ( tmp_6_fu_355_p3 );

    SC_METHOD(thread_rev_fu_261_p2);
    sensitive << ( tmp_fu_253_p3 );

    SC_METHOD(thread_tmp1_cast_fu_245_p1);
    sensitive << ( tmp1_reg_498 );

    SC_METHOD(thread_tmp1_fu_233_p2);
    sensitive << ( m_reg_117 );

    SC_METHOD(thread_tmp2_cast_fu_347_p1);
    sensitive << ( tmp2_reg_526 );

    SC_METHOD(thread_tmp2_fu_335_p2);
    sensitive << ( n_reg_129 );

    SC_METHOD(thread_tmp3_fu_317_p2);
    sensitive << ( tmp_2_fu_267_p2 );
    sensitive << ( rev_fu_261_p2 );

    SC_METHOD(thread_tmp4_fu_375_p2);
    sensitive << ( tmp_8_fu_369_p2 );
    sensitive << ( rev4_fu_363_p2 );

    SC_METHOD(thread_tmp_10_fu_408_p2);
    sensitive << ( tmp_3_reg_508 );
    sensitive << ( tmp_17_cast_fu_404_p1 );

    SC_METHOD(thread_tmp_11_fu_417_p1);
    sensitive << ( tmp_18_cast_fu_413_p1 );

    SC_METHOD(thread_tmp_14_cast_fu_386_p1);
    sensitive << ( jj_fu_350_p2 );

    SC_METHOD(thread_tmp_15_cast_fu_395_p1);
    sensitive << ( tmp_9_fu_390_p2 );

    SC_METHOD(thread_tmp_17_cast_fu_404_p1);
    sensitive << ( nn_fu_341_p2 );

    SC_METHOD(thread_tmp_18_cast_fu_413_p1);
    sensitive << ( tmp_10_fu_408_p2 );

    SC_METHOD(thread_tmp_1_fu_181_p2);
    sensitive << ( p_shl_cast_fu_165_p1 );
    sensitive << ( p_shl9_cast_fu_177_p1 );

    SC_METHOD(thread_tmp_2_fu_267_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ii_fu_248_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_203_p1);
    sensitive << ( j_reg_106 );

    SC_METHOD(thread_tmp_3_fu_311_p2);
    sensitive << ( p_shl2_cast_fu_307_p1 );
    sensitive << ( tmp_9_cast5_fu_295_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_212_p1);
    sensitive << ( tmp_4_fu_207_p2 );

    SC_METHOD(thread_tmp_4_fu_207_p2);
    sensitive << ( tmp_1_reg_467 );
    sensitive << ( tmp_3_cast_fu_203_p1 );

    SC_METHOD(thread_tmp_5_fu_216_p1);
    sensitive << ( tmp_4_cast_fu_212_p1 );

    SC_METHOD(thread_tmp_6_cast_fu_273_p1);
    sensitive << ( ii_fu_248_p2 );

    SC_METHOD(thread_tmp_6_fu_355_p3);
    sensitive << ( jj_fu_350_p2 );

    SC_METHOD(thread_tmp_7_cast_fu_291_p1);
    sensitive << ( tmp_7_fu_285_p2 );

    SC_METHOD(thread_tmp_7_fu_285_p2);
    sensitive << ( p_shl1_fu_277_p3 );
    sensitive << ( tmp_6_cast_fu_273_p1 );

    SC_METHOD(thread_tmp_8_fu_369_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( jj_fu_350_p2 );

    SC_METHOD(thread_tmp_9_cast5_fu_295_p1);
    sensitive << ( mm_fu_239_p2 );

    SC_METHOD(thread_tmp_9_fu_390_p2);
    sensitive << ( tmp_7_cast_reg_503 );
    sensitive << ( tmp_14_cast_fu_386_p1 );

    SC_METHOD(thread_tmp_fu_253_p3);
    sensitive << ( ii_fu_248_p2 );

    SC_METHOD(thread_tmp_s_fu_399_p1);
    sensitive << ( tmp_15_cast_fu_395_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_145_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_191_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_221_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_323_p2 );
    sensitive << ( or_cond2_fu_381_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv2Dfixp_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_address0, "(port)in_V_address0");
    sc_trace(mVcdFile, in_V_ce0, "(port)in_V_ce0");
    sc_trace(mVcdFile, in_V_q0, "(port)in_V_q0");
    sc_trace(mVcdFile, out_V_address0, "(port)out_V_address0");
    sc_trace(mVcdFile, out_V_ce0, "(port)out_V_ce0");
    sc_trace(mVcdFile, out_V_we0, "(port)out_V_we0");
    sc_trace(mVcdFile, out_V_d0, "(port)out_V_d0");
    sc_trace(mVcdFile, out_V_q0, "(port)out_V_q0");
    sc_trace(mVcdFile, kernel_V_address0, "(port)kernel_V_address0");
    sc_trace(mVcdFile, kernel_V_ce0, "(port)kernel_V_ce0");
    sc_trace(mVcdFile, kernel_V_q0, "(port)kernel_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_cast_fu_141_p1, "i_cast_fu_141_p1");
    sc_trace(mVcdFile, i_cast_reg_454, "i_cast_reg_454");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_151_p2, "i_1_fu_151_p2");
    sc_trace(mVcdFile, i_1_reg_462, "i_1_reg_462");
    sc_trace(mVcdFile, tmp_1_fu_181_p2, "tmp_1_fu_181_p2");
    sc_trace(mVcdFile, tmp_1_reg_467, "tmp_1_reg_467");
    sc_trace(mVcdFile, exitcond1_fu_145_p2, "exitcond1_fu_145_p2");
    sc_trace(mVcdFile, j_cast_fu_187_p1, "j_cast_fu_187_p1");
    sc_trace(mVcdFile, j_cast_reg_472, "j_cast_reg_472");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_1_fu_197_p2, "j_1_fu_197_p2");
    sc_trace(mVcdFile, j_1_reg_480, "j_1_reg_480");
    sc_trace(mVcdFile, out_V_addr_reg_485, "out_V_addr_reg_485");
    sc_trace(mVcdFile, exitcond2_fu_191_p2, "exitcond2_fu_191_p2");
    sc_trace(mVcdFile, m_1_fu_227_p2, "m_1_fu_227_p2");
    sc_trace(mVcdFile, m_1_reg_493, "m_1_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp1_fu_233_p2, "tmp1_fu_233_p2");
    sc_trace(mVcdFile, tmp1_reg_498, "tmp1_reg_498");
    sc_trace(mVcdFile, exitcond3_fu_221_p2, "exitcond3_fu_221_p2");
    sc_trace(mVcdFile, tmp_7_cast_fu_291_p1, "tmp_7_cast_fu_291_p1");
    sc_trace(mVcdFile, tmp_7_cast_reg_503, "tmp_7_cast_reg_503");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_3_fu_311_p2, "tmp_3_fu_311_p2");
    sc_trace(mVcdFile, tmp_3_reg_508, "tmp_3_reg_508");
    sc_trace(mVcdFile, tmp3_fu_317_p2, "tmp3_fu_317_p2");
    sc_trace(mVcdFile, tmp3_reg_513, "tmp3_reg_513");
    sc_trace(mVcdFile, n_1_fu_329_p2, "n_1_fu_329_p2");
    sc_trace(mVcdFile, n_1_reg_521, "n_1_reg_521");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp2_fu_335_p2, "tmp2_fu_335_p2");
    sc_trace(mVcdFile, tmp2_reg_526, "tmp2_reg_526");
    sc_trace(mVcdFile, exitcond_fu_323_p2, "exitcond_fu_323_p2");
    sc_trace(mVcdFile, or_cond2_fu_381_p2, "or_cond2_fu_381_p2");
    sc_trace(mVcdFile, or_cond2_reg_531, "or_cond2_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, in_V_load_reg_545, "in_V_load_reg_545");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, kernel_V_load_reg_550, "kernel_V_load_reg_550");
    sc_trace(mVcdFile, p_Val2_s_reg_555, "p_Val2_s_reg_555");
    sc_trace(mVcdFile, i_reg_95, "i_reg_95");
    sc_trace(mVcdFile, j_reg_106, "j_reg_106");
    sc_trace(mVcdFile, m_reg_117, "m_reg_117");
    sc_trace(mVcdFile, n_reg_129, "n_reg_129");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_5_fu_216_p1, "tmp_5_fu_216_p1");
    sc_trace(mVcdFile, tmp_s_fu_399_p1, "tmp_s_fu_399_p1");
    sc_trace(mVcdFile, tmp_11_fu_417_p1, "tmp_11_fu_417_p1");
    sc_trace(mVcdFile, p_shl_fu_157_p3, "p_shl_fu_157_p3");
    sc_trace(mVcdFile, p_shl9_fu_169_p3, "p_shl9_fu_169_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_165_p1, "p_shl_cast_fu_165_p1");
    sc_trace(mVcdFile, p_shl9_cast_fu_177_p1, "p_shl9_cast_fu_177_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_203_p1, "tmp_3_cast_fu_203_p1");
    sc_trace(mVcdFile, tmp_4_fu_207_p2, "tmp_4_fu_207_p2");
    sc_trace(mVcdFile, tmp_4_cast_fu_212_p1, "tmp_4_cast_fu_212_p1");
    sc_trace(mVcdFile, tmp1_cast_fu_245_p1, "tmp1_cast_fu_245_p1");
    sc_trace(mVcdFile, ii_fu_248_p2, "ii_fu_248_p2");
    sc_trace(mVcdFile, tmp_fu_253_p3, "tmp_fu_253_p3");
    sc_trace(mVcdFile, p_shl1_fu_277_p3, "p_shl1_fu_277_p3");
    sc_trace(mVcdFile, tmp_6_cast_fu_273_p1, "tmp_6_cast_fu_273_p1");
    sc_trace(mVcdFile, tmp_7_fu_285_p2, "tmp_7_fu_285_p2");
    sc_trace(mVcdFile, mm_fu_239_p2, "mm_fu_239_p2");
    sc_trace(mVcdFile, p_shl2_fu_299_p3, "p_shl2_fu_299_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_307_p1, "p_shl2_cast_fu_307_p1");
    sc_trace(mVcdFile, tmp_9_cast5_fu_295_p1, "tmp_9_cast5_fu_295_p1");
    sc_trace(mVcdFile, tmp_2_fu_267_p2, "tmp_2_fu_267_p2");
    sc_trace(mVcdFile, rev_fu_261_p2, "rev_fu_261_p2");
    sc_trace(mVcdFile, tmp2_cast_fu_347_p1, "tmp2_cast_fu_347_p1");
    sc_trace(mVcdFile, jj_fu_350_p2, "jj_fu_350_p2");
    sc_trace(mVcdFile, tmp_6_fu_355_p3, "tmp_6_fu_355_p3");
    sc_trace(mVcdFile, tmp_8_fu_369_p2, "tmp_8_fu_369_p2");
    sc_trace(mVcdFile, rev4_fu_363_p2, "rev4_fu_363_p2");
    sc_trace(mVcdFile, tmp4_fu_375_p2, "tmp4_fu_375_p2");
    sc_trace(mVcdFile, tmp_14_cast_fu_386_p1, "tmp_14_cast_fu_386_p1");
    sc_trace(mVcdFile, tmp_9_fu_390_p2, "tmp_9_fu_390_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_395_p1, "tmp_15_cast_fu_395_p1");
    sc_trace(mVcdFile, nn_fu_341_p2, "nn_fu_341_p2");
    sc_trace(mVcdFile, tmp_17_cast_fu_404_p1, "tmp_17_cast_fu_404_p1");
    sc_trace(mVcdFile, tmp_10_fu_408_p2, "tmp_10_fu_408_p2");
    sc_trace(mVcdFile, tmp_18_cast_fu_413_p1, "tmp_18_cast_fu_413_p1");
    sc_trace(mVcdFile, grp_fu_445_p3, "grp_fu_445_p3");
    sc_trace(mVcdFile, grp_fu_445_p2, "grp_fu_445_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("conv2Dfixp.hdltvin.dat");
    mHdltvoutHandle.open("conv2Dfixp.hdltvout.dat");
}

conv2Dfixp::~conv2Dfixp() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete conv2Dfixp_mac_mubkb_U1;
}

void conv2Dfixp::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_191_p2.read(), ap_const_lv1_1))) {
        i_reg_95 = i_1_reg_462.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_95 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_221_p2.read(), ap_const_lv1_1))) {
        j_reg_106 = j_1_reg_480.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_145_p2.read(), ap_const_lv1_0))) {
        j_reg_106 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_323_p2.read(), ap_const_lv1_1))) {
        m_reg_117 = m_1_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_191_p2.read()))) {
        m_reg_117 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        n_reg_129 = n_1_reg_521.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        n_reg_129 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_462 = i_1_fu_151_p2.read();
        i_cast_reg_454 = i_cast_fu_141_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        in_V_load_reg_545 = in_V_q0.read();
        kernel_V_load_reg_550 = kernel_V_q0.read();
        p_Val2_s_reg_555 = out_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_480 = j_1_fu_197_p2.read();
        j_cast_reg_472 = j_cast_fu_187_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_1_reg_493 = m_1_fu_227_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        n_1_reg_521 = n_1_fu_329_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        or_cond2_reg_531 = or_cond2_fu_381_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_191_p2.read()))) {
        out_V_addr_reg_485 =  (sc_lv<10>) (tmp_5_fu_216_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_221_p2.read()))) {
        tmp1_reg_498 = tmp1_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_323_p2.read()))) {
        tmp2_reg_526 = tmp2_fu_335_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp3_reg_513 = tmp3_fu_317_p2.read();
        tmp_3_reg_508 = tmp_3_fu_311_p2.read();
        tmp_7_cast_reg_503 = tmp_7_cast_fu_291_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_145_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_467 = tmp_1_fu_181_p2.read();
    }
}

void conv2Dfixp::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv2Dfixp::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv2Dfixp::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv2Dfixp::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv2Dfixp::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv2Dfixp::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv2Dfixp::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv2Dfixp::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv2Dfixp::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv2Dfixp::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_145_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_145_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_exitcond1_fu_145_p2() {
    exitcond1_fu_145_p2 = (!i_reg_95.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_95.read() == ap_const_lv5_1C);
}

void conv2Dfixp::thread_exitcond2_fu_191_p2() {
    exitcond2_fu_191_p2 = (!j_reg_106.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_106.read() == ap_const_lv5_1C);
}

void conv2Dfixp::thread_exitcond3_fu_221_p2() {
    exitcond3_fu_221_p2 = (!m_reg_117.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(m_reg_117.read() == ap_const_lv2_3);
}

void conv2Dfixp::thread_exitcond_fu_323_p2() {
    exitcond_fu_323_p2 = (!n_reg_129.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_129.read() == ap_const_lv2_3);
}

void conv2Dfixp::thread_grp_fu_445_p2() {
    grp_fu_445_p2 = esl_concat<16,12>(p_Val2_s_reg_555.read(), ap_const_lv12_0);
}

void conv2Dfixp::thread_i_1_fu_151_p2() {
    i_1_fu_151_p2 = (!i_reg_95.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_95.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv2Dfixp::thread_i_cast_fu_141_p1() {
    i_cast_fu_141_p1 = esl_zext<6,5>(i_reg_95.read());
}

void conv2Dfixp::thread_ii_fu_248_p2() {
    ii_fu_248_p2 = (!i_cast_reg_454.read().is_01() || !tmp1_cast_fu_245_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(i_cast_reg_454.read()) + sc_bigint<6>(tmp1_cast_fu_245_p1.read()));
}

void conv2Dfixp::thread_in_V_address0() {
    in_V_address0 =  (sc_lv<10>) (tmp_s_fu_399_p1.read());
}

void conv2Dfixp::thread_in_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_V_ce0 = ap_const_logic_1;
    } else {
        in_V_ce0 = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_j_1_fu_197_p2() {
    j_1_fu_197_p2 = (!j_reg_106.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_106.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv2Dfixp::thread_j_cast_fu_187_p1() {
    j_cast_fu_187_p1 = esl_zext<6,5>(j_reg_106.read());
}

void conv2Dfixp::thread_jj_fu_350_p2() {
    jj_fu_350_p2 = (!tmp2_cast_fu_347_p1.read().is_01() || !j_cast_reg_472.read().is_01())? sc_lv<6>(): (sc_bigint<6>(tmp2_cast_fu_347_p1.read()) + sc_biguint<6>(j_cast_reg_472.read()));
}

void conv2Dfixp::thread_kernel_V_address0() {
    kernel_V_address0 =  (sc_lv<4>) (tmp_11_fu_417_p1.read());
}

void conv2Dfixp::thread_kernel_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        kernel_V_ce0 = ap_const_logic_1;
    } else {
        kernel_V_ce0 = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_m_1_fu_227_p2() {
    m_1_fu_227_p2 = (!m_reg_117.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_117.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2Dfixp::thread_mm_fu_239_p2() {
    mm_fu_239_p2 = (!ap_const_lv2_2.is_01() || !m_reg_117.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_2) - sc_biguint<2>(m_reg_117.read()));
}

void conv2Dfixp::thread_n_1_fu_329_p2() {
    n_1_fu_329_p2 = (!n_reg_129.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_129.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv2Dfixp::thread_nn_fu_341_p2() {
    nn_fu_341_p2 = (!ap_const_lv2_2.is_01() || !n_reg_129.read().is_01())? sc_lv<2>(): (sc_bigint<2>(ap_const_lv2_2) - sc_biguint<2>(n_reg_129.read()));
}

void conv2Dfixp::thread_or_cond2_fu_381_p2() {
    or_cond2_fu_381_p2 = (tmp4_fu_375_p2.read() & tmp3_reg_513.read());
}

void conv2Dfixp::thread_out_V_address0() {
    out_V_address0 = out_V_addr_reg_485.read();
}

void conv2Dfixp::thread_out_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        out_V_ce0 = ap_const_logic_1;
    } else {
        out_V_ce0 = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_out_V_d0() {
    out_V_d0 = grp_fu_445_p3.read().range(27, 12);
}

void conv2Dfixp::thread_out_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(or_cond2_reg_531.read(), ap_const_lv1_1))) {
        out_V_we0 = ap_const_logic_1;
    } else {
        out_V_we0 = ap_const_logic_0;
    }
}

void conv2Dfixp::thread_p_shl1_fu_277_p3() {
    p_shl1_fu_277_p3 = esl_concat<6,2>(ii_fu_248_p2.read(), ap_const_lv2_0);
}

void conv2Dfixp::thread_p_shl2_cast_fu_307_p1() {
    p_shl2_cast_fu_307_p1 = esl_zext<5,4>(p_shl2_fu_299_p3.read());
}

void conv2Dfixp::thread_p_shl2_fu_299_p3() {
    p_shl2_fu_299_p3 = esl_concat<2,2>(mm_fu_239_p2.read(), ap_const_lv2_0);
}

void conv2Dfixp::thread_p_shl9_cast_fu_177_p1() {
    p_shl9_cast_fu_177_p1 = esl_zext<11,7>(p_shl9_fu_169_p3.read());
}

void conv2Dfixp::thread_p_shl9_fu_169_p3() {
    p_shl9_fu_169_p3 = esl_concat<5,2>(i_reg_95.read(), ap_const_lv2_0);
}

void conv2Dfixp::thread_p_shl_cast_fu_165_p1() {
    p_shl_cast_fu_165_p1 = esl_zext<11,10>(p_shl_fu_157_p3.read());
}

void conv2Dfixp::thread_p_shl_fu_157_p3() {
    p_shl_fu_157_p3 = esl_concat<5,5>(i_reg_95.read(), ap_const_lv5_0);
}

void conv2Dfixp::thread_rev4_fu_363_p2() {
    rev4_fu_363_p2 = (tmp_6_fu_355_p3.read() ^ ap_const_lv1_1);
}

void conv2Dfixp::thread_rev_fu_261_p2() {
    rev_fu_261_p2 = (tmp_fu_253_p3.read() ^ ap_const_lv1_1);
}

void conv2Dfixp::thread_tmp1_cast_fu_245_p1() {
    tmp1_cast_fu_245_p1 = esl_sext<6,2>(tmp1_reg_498.read());
}

void conv2Dfixp::thread_tmp1_fu_233_p2() {
    tmp1_fu_233_p2 = (!m_reg_117.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(m_reg_117.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void conv2Dfixp::thread_tmp2_cast_fu_347_p1() {
    tmp2_cast_fu_347_p1 = esl_sext<6,2>(tmp2_reg_526.read());
}

void conv2Dfixp::thread_tmp2_fu_335_p2() {
    tmp2_fu_335_p2 = (!n_reg_129.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_biguint<2>(n_reg_129.read()) + sc_bigint<2>(ap_const_lv2_3));
}

void conv2Dfixp::thread_tmp3_fu_317_p2() {
    tmp3_fu_317_p2 = (tmp_2_fu_267_p2.read() & rev_fu_261_p2.read());
}

void conv2Dfixp::thread_tmp4_fu_375_p2() {
    tmp4_fu_375_p2 = (tmp_8_fu_369_p2.read() & rev4_fu_363_p2.read());
}

void conv2Dfixp::thread_tmp_10_fu_408_p2() {
    tmp_10_fu_408_p2 = (!tmp_3_reg_508.read().is_01() || !tmp_17_cast_fu_404_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_508.read()) + sc_biguint<5>(tmp_17_cast_fu_404_p1.read()));
}

void conv2Dfixp::thread_tmp_11_fu_417_p1() {
    tmp_11_fu_417_p1 = esl_zext<64,32>(tmp_18_cast_fu_413_p1.read());
}

void conv2Dfixp::thread_tmp_14_cast_fu_386_p1() {
    tmp_14_cast_fu_386_p1 = esl_zext<9,6>(jj_fu_350_p2.read());
}

void conv2Dfixp::thread_tmp_15_cast_fu_395_p1() {
    tmp_15_cast_fu_395_p1 = esl_sext<32,9>(tmp_9_fu_390_p2.read());
}

void conv2Dfixp::thread_tmp_17_cast_fu_404_p1() {
    tmp_17_cast_fu_404_p1 = esl_zext<5,2>(nn_fu_341_p2.read());
}

void conv2Dfixp::thread_tmp_18_cast_fu_413_p1() {
    tmp_18_cast_fu_413_p1 = esl_sext<32,5>(tmp_10_fu_408_p2.read());
}

void conv2Dfixp::thread_tmp_1_fu_181_p2() {
    tmp_1_fu_181_p2 = (!p_shl_cast_fu_165_p1.read().is_01() || !p_shl9_cast_fu_177_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_165_p1.read()) - sc_biguint<11>(p_shl9_cast_fu_177_p1.read()));
}

void conv2Dfixp::thread_tmp_2_fu_267_p2() {
    tmp_2_fu_267_p2 = (!ii_fu_248_p2.read().is_01() || !ap_const_lv6_1C.is_01())? sc_lv<1>(): (sc_bigint<6>(ii_fu_248_p2.read()) < sc_bigint<6>(ap_const_lv6_1C));
}

void conv2Dfixp::thread_tmp_3_cast_fu_203_p1() {
    tmp_3_cast_fu_203_p1 = esl_zext<11,5>(j_reg_106.read());
}

void conv2Dfixp::thread_tmp_3_fu_311_p2() {
    tmp_3_fu_311_p2 = (!p_shl2_cast_fu_307_p1.read().is_01() || !tmp_9_cast5_fu_295_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl2_cast_fu_307_p1.read()) - sc_biguint<5>(tmp_9_cast5_fu_295_p1.read()));
}

void conv2Dfixp::thread_tmp_4_cast_fu_212_p1() {
    tmp_4_cast_fu_212_p1 = esl_sext<32,11>(tmp_4_fu_207_p2.read());
}

void conv2Dfixp::thread_tmp_4_fu_207_p2() {
    tmp_4_fu_207_p2 = (!tmp_1_reg_467.read().is_01() || !tmp_3_cast_fu_203_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_1_reg_467.read()) + sc_biguint<11>(tmp_3_cast_fu_203_p1.read()));
}

void conv2Dfixp::thread_tmp_5_fu_216_p1() {
    tmp_5_fu_216_p1 = esl_zext<64,32>(tmp_4_cast_fu_212_p1.read());
}

void conv2Dfixp::thread_tmp_6_cast_fu_273_p1() {
    tmp_6_cast_fu_273_p1 = esl_sext<8,6>(ii_fu_248_p2.read());
}

void conv2Dfixp::thread_tmp_6_fu_355_p3() {
    tmp_6_fu_355_p3 = jj_fu_350_p2.read().range(5, 5);
}

void conv2Dfixp::thread_tmp_7_cast_fu_291_p1() {
    tmp_7_cast_fu_291_p1 = esl_sext<9,8>(tmp_7_fu_285_p2.read());
}

void conv2Dfixp::thread_tmp_7_fu_285_p2() {
    tmp_7_fu_285_p2 = (!p_shl1_fu_277_p3.read().is_01() || !tmp_6_cast_fu_273_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl1_fu_277_p3.read()) - sc_bigint<8>(tmp_6_cast_fu_273_p1.read()));
}

void conv2Dfixp::thread_tmp_8_fu_369_p2() {
    tmp_8_fu_369_p2 = (!jj_fu_350_p2.read().is_01() || !ap_const_lv6_1C.is_01())? sc_lv<1>(): (sc_bigint<6>(jj_fu_350_p2.read()) < sc_bigint<6>(ap_const_lv6_1C));
}

void conv2Dfixp::thread_tmp_9_cast5_fu_295_p1() {
    tmp_9_cast5_fu_295_p1 = esl_zext<5,2>(mm_fu_239_p2.read());
}

void conv2Dfixp::thread_tmp_9_fu_390_p2() {
    tmp_9_fu_390_p2 = (!tmp_7_cast_reg_503.read().is_01() || !tmp_14_cast_fu_386_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(tmp_7_cast_reg_503.read()) + sc_biguint<9>(tmp_14_cast_fu_386_p1.read()));
}

void conv2Dfixp::thread_tmp_fu_253_p3() {
    tmp_fu_253_p3 = ii_fu_248_p2.read().range(5, 5);
}

void conv2Dfixp::thread_tmp_s_fu_399_p1() {
    tmp_s_fu_399_p1 = esl_zext<64,32>(tmp_15_cast_fu_395_p1.read());
}

void conv2Dfixp::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_145_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_191_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond3_fu_221_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_323_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond2_fu_381_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

void conv2Dfixp::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_address0\" :  \"" << in_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_V_ce0\" :  \"" << in_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_V_q0\" :  \"" << in_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_address0\" :  \"" << out_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_ce0\" :  \"" << out_V_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_we0\" :  \"" << out_V_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_V_d0\" :  \"" << out_V_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_V_q0\" :  \"" << out_V_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_address0\" :  \"" << kernel_V_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_V_ce0\" :  \"" << kernel_V_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_V_q0\" :  \"" << kernel_V_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

